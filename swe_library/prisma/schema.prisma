// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

enum MediaType {
  BOOK
  CD
  MAP
  MAGAZINE
}

model Media {
  id        Int      @id @default(autoincrement())
  mediaType MediaType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  ISBN      String?  @unique
  author    Author   @relation(fields: [authorId], references: [id])
  authorId  Int
  rentedBy  RentedMedia[]
  location    Location?   @relation(fields: [locationId], references: [id])
  locationId  Int?
}

model RentedMedia{
  id        Int      @id @default(autoincrement())
  media     Media    @relation(fields: [mediaId], references: [id])
  mediaId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  rentedAt  DateTime @default(now())
  returnedAt DateTime?
}

model Location {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  media     Media[]
}


model Author {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  birthday  DateTime? @default(now())

  media     Media[] 
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())

  birthday  DateTime @default(now())
  street String
  plz    Int
  city   String

  rentedMedias RentedMedia[]
}

model Employee {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  birthday  DateTime? @db.Date

  password String
}
